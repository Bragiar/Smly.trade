{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Bragi/Documents/Smileycoin-vinna/smileyco.trade/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Bragi/Documents/Smileycoin-vinna/smileyco.trade/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/Bragi/Documents/Smileycoin-vinna/smileyco.trade/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Bragi/Documents/Smileycoin-vinna/smileyco.trade/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Bragi/Documents/Smileycoin-vinna/smileyco.trade/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Bragi/Documents/Smileycoin-vinna/smileyco.trade/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Bragi/Documents/Smileycoin-vinna/smileyco.trade/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Bragi/Documents/Smileycoin-vinna/smileyco.trade/src/components/coins/Coins.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Coins.css';\n\nvar Coins =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Coins, _Component);\n\n  function Coins() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Coins);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Coins)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(Coins, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"fetchData\",\n    value: function () {\n      var _fetchData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var baseurl, api_key, url, response, result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                baseurl = 'https://min-api.cryptocompare.com/data/price?fsym=SMLY&tsyms=BTC,DOGE,USD';\n                api_key = process.env.REACT_APP_SERVICE_URL;\n                url = baseurl + '&api_key=' + api_key;\n                _context.prev = 3;\n                _context.next = 6;\n                return fetch(url);\n\n              case 6:\n                response = _context.sent;\n                _context.next = 9;\n                return response.json();\n\n              case 9:\n                result = _context.sent;\n                this.setState({\n                  loading: false,\n                  data: result\n                });\n                _context.next = 17;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](3);\n                console.log('Error fetching', _context.t0);\n                this.setState({\n                  error: true,\n                  loading: false\n                });\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 13]]);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var listOpen = this.state.listOpen;\n      var _this$state = this.state,\n          data = _this$state.data,\n          loading = _this$state.loading,\n          error = _this$state.error;\n\n      if (loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \"Loading\");\n      } // if (error || !data) {}\n\n\n      return React.createElement(\"div\", {\n        className: \"header__coins\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, data && React.createElement(\"ul\", {\n        className: \"header__coins\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"header__coin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"header__coin__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"SMLY/USD\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, data.USD, \" USD\")), React.createElement(\"li\", {\n        className: \"header__coin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"header__coin__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"SMLY/BTC\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, data.BTC, \" BTC\")), React.createElement(\"li\", {\n        className: \"header__coin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"header__coin__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"SMLY/DOGE\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, data.DOGE, \" DOGE\"))));\n    }\n  }]);\n\n  return Coins;\n}(Component);\n\nexport { Coins as default };","map":{"version":3,"sources":["/Users/Bragi/Documents/Smileycoin-vinna/smileyco.trade/src/components/coins/Coins.js"],"names":["React","Component","Link","Coins","state","loading","fetchData","baseurl","api_key","process","env","REACT_APP_SERVICE_URL","url","fetch","response","json","result","setState","data","console","log","error","listOpen","USD","BTC","DOGE"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAO,aAAP;;IAEqBC,K;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AAAEC,MAAAA,OAAO,EAAE;AAAX,K;;;;;;wCAEY;AAClB,WAAKC,SAAL;AACD;;;;;;;;;;;;AAGOC,gBAAAA,O,GAAU,2E;AACVC,gBAAAA,O,GAAUC,OAAO,CAACC,GAAR,CAAYC,qB;AACtBC,gBAAAA,G,GAAML,OAAO,GAAG,WAAV,GAAwBC,O;;;uBAIjBK,KAAK,CAACD,GAAD,C;;;AAAtBE,gBAAAA,Q;;uBACqBA,QAAQ,CAACC,IAAT,E;;;AAAfC,gBAAAA,M;AACN,qBAAKC,QAAL,CAAc;AAAEZ,kBAAAA,OAAO,EAAE,KAAX;AAAkBa,kBAAAA,IAAI,EAAEF;AAAxB,iBAAd;;;;;;;AAEAG,gBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,qBAAKH,QAAL,CAAc;AAAEI,kBAAAA,KAAK,EAAE,IAAT;AAAehB,kBAAAA,OAAO,EAAE;AAAxB,iBAAd;;;;;;;;;;;;;;;;;;6BAIK;AAAA,UACCiB,QADD,GACc,KAAKlB,KADnB,CACCkB,QADD;AAAA,wBAE0B,KAAKlB,KAF/B;AAAA,UAECc,IAFD,eAECA,IAFD;AAAA,UAEOb,OAFP,eAEOA,OAFP;AAAA,UAEgBgB,KAFhB,eAEgBA,KAFhB;;AAIP,UAAIhB,OAAJ,EAAa;AACX,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAR;AACD,OANM,CAQP;;;AAGA,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKa,IAAI,IACH;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,IAAI,CAACK,GAAT,SAFF,CADF,EAKE;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIL,IAAI,CAACM,GAAT,SAFF,CALF,EASE;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIN,IAAI,CAACO,IAAT,UAFF,CATF,CAFN,CADF;AAoBD;;;;EAtDgCxB,S;;SAAdE,K","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Coins.css';\n\nexport default class Coins extends Component {\n  state = { loading: true }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  async fetchData() {\n    const baseurl = 'https://min-api.cryptocompare.com/data/price?fsym=SMLY&tsyms=BTC,DOGE,USD'\n    const api_key = process.env.REACT_APP_SERVICE_URL;\n    const url = baseurl + '&api_key=' + api_key;\n\n    let response;\n    try {\n      response = await fetch(url);\n      const result = await response.json();\n      this.setState({ loading: false, data: result})\n    } catch (error) {\n      console.log('Error fetching', error)\n      this.setState({ error: true, loading: false })\n    }\n  }\n\n  render() {\n    const { listOpen } = this.state;\n    const { data, loading, error } = this.state;\n\n    if (loading) {\n      return (<div>Loading</div>);\n    }\n\n    // if (error || !data) {}\n\n\n    return (\n      <div className=\"header__coins\">\n          {data && (\n            <ul className=\"header__coins\">\n              <li className=\"header__coin\">\n                <p className=\"header__coin__title\">SMLY/USD</p>\n                <p>{data.USD} USD</p>\n              </li>\n              <li className=\"header__coin\">\n                <p className=\"header__coin__title\">SMLY/BTC</p>\n                <p>{data.BTC} BTC</p>\n              </li>\n              <li className=\"header__coin\">\n                <p className=\"header__coin__title\">SMLY/DOGE</p>\n                <p>{data.DOGE} DOGE</p>\n              </li>\n            </ul>\n          )}\n          </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}